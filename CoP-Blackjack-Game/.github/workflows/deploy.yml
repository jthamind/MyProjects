name: Deploy

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.8

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Zip Lambda function
        run: zip -r blackjack_game.zip .

      - name: Debug AWS CLI
        run: |
          set -x
          echo "AWS CLI Version:"
          aws --version
          echo "Caller Identity:"
          aws sts get-caller-identity || echo "Failed to get caller identity"
          echo "Listing S3 Buckets:"
          aws s3 ls || echo "Failed to list S3 buckets"
          echo "Creating S3 Bucket:"
          aws s3 mb s3://blackjack-game-site || echo "Failed to create S3 bucket or it already exists"
          echo "Uploading to S3:"
          aws s3 cp blackjack_game.zip s3://blackjack-game-site/ || echo "Failed to upload to S3"
          set +x
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_DEFAULT_REGION: us-east-1

      - name: Setup Terraform
        run: |
          terraform init

      - name: Import Existing Lambda Function
        run: |
          echo "Importing existing Lambda function..."
          terraform import aws_lambda_function.blackjack_game arn:aws:lambda:us-east-1:${{ secrets.AWS_ACCOUNT_ID }}:function:blackjack_game
          terraform plan
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_DEFAULT_REGION: us-east-1

      - name: Apply Terraform
        if: success()  # Only run if the import step succeeds
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        run: |
          terraform apply -auto-approve
