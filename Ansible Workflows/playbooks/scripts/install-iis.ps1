<#
GENERATED BY CHATGPT. TESTED AND CONFIRMED WORKING.
.SYNOPSIS
  Ensures a specific set of IIS role-services and ASP.NET features are installed/enabled.

.DESCRIPTION
  - Defines the desired IIS and .NET/ASP.NET features.
  - Checks each one; if any are missing, installs them (including sub-features & management tools).
  - Reports status at the end.

.NOTES
  Run this in an elevated (Administrator) PowerShell session.
#>

# Require Administrator
if (-not ([Security.Principal.WindowsPrincipal] [Security.Principal.WindowsIdentity]::GetCurrent()
    ).IsInRole([Security.Principal.WindowsBuiltInRole] "Administrator")) {
    Write-Warning "This script must be run as Administrator."
    exit 1
}

# List of IIS role-services and .NET/ASP.NET features to ensure
$desiredFeatures = @(
    'Web-Server'               # Core IIS
    'NET-Framework-45-Core'    # .NET Framework 4.5 Core
    'NET-Framework-45-ASPNET'  # .NET Framework 4.5 ASP.NET
    'Web-Asp-Net45'            # ASP.NET 4.5
    'Web-Http-Redirect'        # HTTP Redirection
    'Web-Health'               # Health and Diagnostics
    'Web-Log-Libraries'        # Logging Tools
    'Web-Request-Monitor'      # Request Monitor
    'Web-Http-Tracing'         # Tracing
    'Web-Performance'          # Performance (kernel caching)
    'Web-Stat-Compression'     # Static Content Compression
    'Web-Basic-Auth'           # Basic Authentication
    'Web-Client-Auth'          # Client Certificate Mapping Auth
    'Web-Windows-Auth'         # Windows Authentication
)

# Find any features that are not installed
$missing = foreach ($feat in $desiredFeatures) {
    $f = Get-WindowsFeature -Name $feat -ErrorAction SilentlyContinue
    if (-not $f) {
        Write-Warning "Feature '$feat' not found on this OS."
    }
    elseif (-not $f.Installed) {
        $feat
    }
}

if ($missing) {
    Write-Host "Installing missing features: $($missing -join ', ')" -ForegroundColor Yellow
    Install-WindowsFeature -Name $missing `
        -IncludeAllSubFeature `
        -IncludeManagementTools `
        -ErrorAction Stop | Out-Null

    Write-Host "✅ Successfully installed: $($missing -join ', ')" -ForegroundColor Green
}
else {
    Write-Host "✅ All specified IIS and ASP.NET features are already installed." -ForegroundColor Green
}

# Display final status table
Get-WindowsFeature -Name $desiredFeatures |
    Select-Object DisplayName, Name, Installed |
    Format-Table -AutoSize

